## There's 2 styles of defining parameters for certain modules.
# 1. We have a parameter called "model_type" which decides which model to use.
#    The model_type is then used to select the correct model.
#    The model_type is also used to select the correct model from a dictionary of model parameters, which is defined in the model_parameters.yml file.
#    So in this case, you define e.g. 
#         ray_loss_type: type_a, 
#         ray_loss_parameters: 
#           type_a: {parameter1: value1, parameter2: value2}  # type_a has to line up with ray_loss_type
#           type_b: {WHATEVER: WHATEVER}  
#           .... # anything else can be put here and will be ignored
#
# 2. We have a parameter called "model_type" which decides which model to use.
#    The model_type is then used to select the correct model.
#    The model parameters are not selected, but defined for each model type, so you have to comment out any other model parameters.
#    So in this case, you define e.g. 
#         ray_loss_type: type_a, 
#         ray_loss_parameters: {parameter1: value1, parameter2: value2}
#
#    Note how the type_a is not there anymore, and the parameters for type_b are not allowed to be there
#    
# The reason for these different strategies is that it is quite nice to always have all the parameters for different types in in the file, 
# even if they are not used, so that you can quickly switch between versions. This is the case for method 1. 
# For method 2, you will always have to comment out the other parameters once you switch.
# Or even delete them in general, but then it becomes a hassle to figuring out the correct parameters again if you want to switch back.
# Method 1 is slightly less clean, as there are parameters (which are also saved to wandb) which don't do anything.
#
# In this file, method 2 is mostly used. 
general_params: 
  # Step size of the number of obstacles for each world
  plane_sweep_step_size: 5
  spherebox_sweep_step_size: 10

  # For the dense sampling dataset
  runs_per_number_of_obstacles: 20

  # For the single wall validation set
  single_wall_every_k_epochs: 10

  # For the rollout datasets
  runs_per_number_of_obstacles_expert_rollout: 20
  runs_per_number_of_obstacles_per_epoch_model: 1

datasets:
  - name: val_loss_sphere_boxes_dense
    blocks: $dataval/general_blocks/sphere_boxes_head
    requires_rollout_workers_after_setup: False
    max_workers: 12

  - name: val_loss_planes_dense
    blocks: $dataval/general_blocks/planes_head
    requires_rollout_workers_after_setup: False
    max_workers: 12

  - name: val_loss_single_wall_rollout
    blocks: $dataval/general_blocks/single_wall_head
    requires_rollout_workers_after_setup: True
    max_workers: 8
      
  - name: val_loss_expert_spherebox
    blocks: $dataval/general_blocks/expert_head_spherebox
    requires_rollout_workers_after_setup: False
    max_workers: 12

  - name: val_loss_expert_planes
    blocks: $dataval/general_blocks/expert_head_planes
    requires_rollout_workers_after_setup: False
    max_workers: 12

  - name: val_loss_model_rollout
    requires_rollout_workers_after_setup: True
    max_workers: 12
    blocks:
      - $dataval/expert_and_model_rollout_blocks/model_head_spherebox
      - $dataval/expert_and_model_rollout_blocks/model_head_planes

      - name: concat_samples
        type: Concat
        inputs: 
         - save_on_disk_spherebox_model
         - save_on_disk_planes_model
      
      - name: flatten
        type: Flatten
        inputs: 
          - concat_samples  
        parameters:
          sequenced: True
      
      - name: length_bucketer
        type: LengthBucketer
        inputs: 
          - flatten
        parameters:
          bucket_size: 128

      - name: output
        type: Output
        inputs: 
          - length_bucketer

        


general_blocks: 

####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
############################### SPHERE BOXES
  sphere_boxes_head:
    - name: sweep_seed
      type: Sweep
      parameters: 
        sweep_variable_name: seed
        sweep_type: jumps  # "steps" or "values" or "jumps"
        sweep_type_params: 
          start: 0
          jump_size: 1
          num_jumps: $dataval/general_params/runs_per_number_of_obstacles
    
    - name: sweep_obstacles
      type: Sweep
      inputs:
        - sweep_seed
      parameters:
        sweep_variable_name: obstacle_groups/0/count
        sweep_type: "steps"
        sweep_type_params: 
          start: 50
          stop: 210
          step: $dataval/general_params/spherebox_sweep_step_size

    - name: random_sphere_cubes
      type: ProbabilisticWorld
      inputs: 
        - sweep_obstacles
      parameters: 
        world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
        voxel_size: $general/voxel_size
        voxel_truncation_distance_vox: $general/truncation_distance_vox
        start_goal_location_type: single_random
        start_goal_location_type_params: {}
        start_goal_margin_to_obstacles: 0.5
        seed: 0

        obstacle_groups:
          - name: box_spheres
            group_type: weighted
            count: 50
            obstacles:
              - obstacle_type: Box
                dependent_variables:
                  length: NORMAL(2.0, 0.2)
                length_x: DEPENDENT(length)
                length_y: DEPENDENT(length)
                length_z: DEPENDENT(length)

              - obstacle_type: Sphere
                radius: NORMAL(1.0, 0.2)


    - name: sampler
      type: PositionSampler
      inputs: 
        - random_sphere_cubes
      parameters:
        num_samples: 1024
        sampler_type: uniform_sampler
        sampler_params: {}
        ray_observer_params: $general/policies/raycasting_dl
    
    - name: save_on_disk
      type: CacheOnDisk
      inputs: 
        - sampler
      parameters:
        cache_name: random_sphere_cubes_uniform_distribution_validation
        store_permanently: True
        chunk_size: 1
        keep_in_memory: True
    
    - name: flatten
      type: Flatten
      inputs: 
        - save_on_disk
      parameters:
        sequenced: False

    - name: output
      type: Output
      inputs: 
        - flatten



####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
  ########################################### Planes
  planes_head:
    - name: sweep_seed
      type: Sweep
      parameters: 
        sweep_variable_name: seed
        sweep_type: jumps  # "steps" or "values" or "jumps"
        sweep_type_params: 
          start: 0
          jump_size: 1
          num_jumps: $dataval/general_params/runs_per_number_of_obstacles
    
    - name: sweep_obstacles
      type: Sweep
      inputs:
        - sweep_seed
      parameters:
        sweep_variable_name: obstacle_groups/0/count
        sweep_type: "steps"
        sweep_type_params: 
          start: 25
          stop: 105
          step: $dataval/general_params/plane_sweep_step_size
 
    - name: random_planes
      type: ProbabilisticWorld
      inputs:
        - sweep_obstacles
      parameters: 
        world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
        voxel_size: $general/voxel_size
        voxel_truncation_distance_vox: $general/truncation_distance_vox
        start_goal_location_type: single_random
        start_goal_location_type_params: {}
        start_goal_margin_to_obstacles: 0.5
 
        seed: 0
 
        obstacle_groups:
          - name: planes
            group_type: weighted
            count: 100
            obstacles: 
              - obstacle_type: Box
                length_x: $worlds/general_params/plane_thickness
                length_y: $worlds/general_params/plane_world_distribution
                length_z: $worlds/general_params/plane_world_distribution
              - obstacle_type: Box
                length_x: $worlds/general_params/plane_world_distribution
                length_y: $worlds/general_params/plane_thickness
                length_z: $worlds/general_params/plane_world_distribution
              - obstacle_type: Box
                length_x: $worlds/general_params/plane_world_distribution
                length_y: $worlds/general_params/plane_world_distribution
                length_z: $worlds/general_params/plane_thickness
 
    - name: sampler
      type: PositionSampler
      inputs: 
        - random_planes
      parameters:
        num_samples: 1024
        sampler_type: uniform_sampler
        sampler_params: {}
        ray_observer_params: $general/policies/raycasting_dl
    
    - name: save_on_disk
      type: CacheOnDisk
      inputs: 
        - sampler
      parameters:
        cache_name: random_planes_uniform_distribution_validation
        store_permanently: True
        chunk_size: 1
        keep_in_memory: True
    
    - name: flatten
      type: Flatten
      inputs: 
        - save_on_disk
      parameters:
        sequenced: False

    - name: output
      type: Output
      inputs: 
        - flatten



####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
################################## SINGLE WALL
  single_wall_head:
      - name: sweep_start_pos
        type: Sweep
        parameters: 
          sweep_variable_name: start/0  # x index of start
          sweep_type: steps  # "steps" or "values"
          sweep_type_params: 
            start: 2.0
            stop: 9.0
            step: 1.0
      
      - name: sweep_wall_size
        type: Sweep
        inputs: 
          - sweep_start_pos
        parameters: 
          sweep_variable_name: cubes/0/size/1  # x index of start
          sweep_type: steps  # "steps" or "values"
          sweep_type_params: 
            start: 6.0
            stop: 12.0
            step: 1.0

      - name: manual_cube_world
        type: ManualCubeWorld
        inputs: 
          - sweep_wall_size
        parameters:
          cubes:
            - location: [5.0, 2.0, 5.0]
              size: [12.0, 8.0, 1.0]
          world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
          start: [5.0, 5.0, 1.0]
          goal: [5.0, 5.0, 9.0]
          voxel_size: 0.2
          voxel_truncation_distance_vox: 4.0

      - name: learned_sampler
        type: LearnedRolloutSampler
        inputs: 
          - manual_cube_world
        parameters: 
          terminate_if_stuck: False
          stride: 1
      
      - name: open3d_renderer
        type: Open3dRendering
        inputs: 
          - learned_sampler

      - name: every_epoch
        type: EveryEpoch
        inputs: 
          - open3d_renderer
        parameters: 
          setup_before_training: False
          every_k_epochs: $dataval/general_params/single_wall_every_k_epochs
          aggregate: False

      - name: flatten
        type: Flatten
        inputs: 
          - every_epoch
        parameters:
          sequenced: True

      - name: length_bucketer
        type: LengthBucketer
        inputs: 
          - flatten
        parameters:
          bucket_size: 128

      - name: output
        type: Output
        inputs: 
          - length_bucketer


####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
  
  expert_head_spherebox:
  - name: sweep_seed_spherebox_expert
    type: Sweep
    parameters: 
      sweep_variable_name: seed
      sweep_type: jumps  # "steps" or "values" or "jumps"
      sweep_type_params: 
        start: 0
        jump_size: 1
        num_jumps: $dataval/general_params/runs_per_number_of_obstacles_expert_rollout
  
  - name: sweep_obstacles_spherebox_expert
    type: Sweep
    inputs:
      - sweep_seed_spherebox_expert
    parameters:
      sweep_variable_name: obstacle_groups/0/count
      sweep_type: "steps"
      sweep_type_params: 
        start: 50
        stop: 210
        step: $dataval/general_params/spherebox_sweep_step_size

  - name: input_world_spherebox_expert
    type: ProbabilisticWorld
    inputs: 
      - sweep_obstacles_spherebox_expert
    parameters: 
      world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
      voxel_size: $general/voxel_size
      voxel_truncation_distance_vox: $general/truncation_distance_vox
      start_goal_location_type: random_with_mindist
      start_goal_location_type_params: 
        min_dist: 7.0
      start_goal_margin_to_obstacles: 0.5
      seed: 0

      obstacle_groups:
        - name: box_spheres
          group_type: weighted
          count: 50
          obstacles:
            - obstacle_type: Box
              dependent_variables:
                length: NORMAL(2.0, 0.2)
              length_x: DEPENDENT(length)
              length_y: DEPENDENT(length)
              length_z: DEPENDENT(length)

            - obstacle_type: Sphere
              radius: NORMAL(1.0, 0.2)

  - name: sampler_spherebox_expert
    type: ExpertRolloutSampler
    inputs: 
      - input_world_spherebox_expert
    parameters:
      terminate_if_stuck: True
      stride: 1
  
  - name: save_on_disk_spherebox_expert
    type: CacheOnDisk
    inputs: 
      - sampler_spherebox_expert
    parameters:
      cache_name: expert_spherebox_validation
      store_permanently: True
      chunk_size: 1
      keep_in_memory: True

  - name: flatten
    type: Flatten
    inputs: 
      - save_on_disk_spherebox_expert
    parameters:
      sequenced: True

  - name: length_bucketer
    type: LengthBucketer
    inputs: 
      - flatten
    parameters:
      bucket_size: 128

  - name: output
    type: Output
    inputs: 
      - length_bucketer


####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################

  expert_head_planes:
  - name: sweep_seed_planes_expert
    type: Sweep
    parameters: 
      sweep_variable_name: seed
      sweep_type: jumps  # "steps" or "values" or "jumps"
      sweep_type_params: 
        start: 0
        jump_size: 1
        num_jumps: $dataval/general_params/runs_per_number_of_obstacles_expert_rollout
  
  - name: sweep_obstacles_planes_expert
    type: Sweep
    inputs:
      - sweep_seed_planes_expert
    parameters:
      sweep_variable_name: obstacle_groups/0/count
      sweep_type: "steps"
      sweep_type_params: 
        start: 25
        stop: 105
        step: $dataval/general_params/plane_sweep_step_size
  
  - name: input_world_planes_expert
    type: ProbabilisticWorld
    inputs: 
      - sweep_obstacles_planes_expert
    parameters: 
      world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
      voxel_size: $general/voxel_size
      voxel_truncation_distance_vox: $general/truncation_distance_vox
      start_goal_location_type: random_with_mindist
      start_goal_location_type_params: 
        min_dist: 7.0
      start_goal_margin_to_obstacles: 0.5
      seed: 0

      obstacle_groups:
      - name: planes
        group_type: weighted
        count: 100
        obstacles: 
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_thickness
            length_y: $worlds/general_params/plane_world_distribution
            length_z: $worlds/general_params/plane_world_distribution
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_world_distribution
            length_y: $worlds/general_params/plane_thickness
            length_z: $worlds/general_params/plane_world_distribution
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_world_distribution
            length_y: $worlds/general_params/plane_world_distribution
            length_z: $worlds/general_params/plane_thickness

  - name: sampler_planes_expert
    type: ExpertRolloutSampler
    inputs: 
      - input_world_planes_expert
    parameters:
      terminate_if_stuck: True
      stride: 1
  
  - name: save_on_disk_planes_expert
    type: CacheOnDisk
    inputs: 
      - sampler_planes_expert
    parameters:
      cache_name: expert_planes_validation
      store_permanently: True
      chunk_size: 1
      keep_in_memory: True

  - name: flatten
    type: Flatten
    inputs: 
      - save_on_disk_planes_expert
    parameters:
      sequenced: True

  - name: length_bucketer
    type: LengthBucketer
    inputs: 
      - flatten
    parameters:
      bucket_size: 128

  - name: output
    type: Output
    inputs: 
      - length_bucketer

####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################

expert_and_model_rollout_blocks:
  model_head_spherebox:
  - name: sweep_seed_spherebox_model
    type: Sweep
    parameters: 
      sweep_variable_name: seed
      sweep_type: jumps  # "steps" or "values" or "jumps"
      sweep_type_params: 
        start: 0
        jump_size: 1
        num_jumps: $dataval/general_params/runs_per_number_of_obstacles_per_epoch_model
  
  - name: sweep_obstacles_spherebox_model
    type: Sweep
    inputs:
      - sweep_seed_spherebox_model
    parameters:
      sweep_variable_name: obstacle_groups/0/count
      sweep_type: "steps"
      sweep_type_params: 
        start: 50
        stop: 210
        step: $dataval/general_params/spherebox_sweep_step_size

  - name: input_world_spherebox_model
    type: ProbabilisticWorld
    inputs:
      - sweep_obstacles_spherebox_model
    parameters: 
      world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
      voxel_size: $general/voxel_size
      voxel_truncation_distance_vox: $general/truncation_distance_vox
      start_goal_location_type: random_with_mindist
      start_goal_location_type_params: 
        min_dist: 7.0
      start_goal_margin_to_obstacles: 0.5
      seed: 0

      obstacle_groups:
        - name: box_spheres
          group_type: weighted
          count: 50
          obstacles:
            - obstacle_type: Box
              dependent_variables:
                length: NORMAL(2.0, 0.2)
              length_x: DEPENDENT(length)
              length_y: DEPENDENT(length)
              length_z: DEPENDENT(length)

            - obstacle_type: Sphere
              radius: NORMAL(1.0, 0.2)

  - name: sampler_spherebox_model
    type: LearnedRolloutSampler
    inputs: 
      - input_world_spherebox_model
    parameters:
      terminate_if_stuck: False
      stride: 1
  
  - name: log_success_rates_spherebox_model
    type: LogSuccessRatesWandb
    inputs: 
      - sampler_spherebox_model
    parameters:
      statistic_name: spherebox_model_validation

  - name: every_epoch_spherebox_model
    type: EveryEpoch
    inputs: 
      - log_success_rates_spherebox_model
    parameters:
      every_k_epochs: 1
      setup_before_training: False  # We have no model yet before training
      aggregate: True

  - name: save_on_disk_spherebox_model
    type: CacheOnDisk
    inputs: 
      - every_epoch_spherebox_model
    parameters:
      keep_in_memory: False
      cache_name: spherebox_model_temp_validation
      store_permanently: False
      chunk_size: 1
 
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################
####################################################################################################################################################

  model_head_planes:
  - name: sweep_seed_planes_model
    type: Sweep
    parameters: 
      sweep_variable_name: seed
      sweep_type: jumps  # "steps" or "values" or "jumps"
      sweep_type_params: 
        start: 0
        jump_size: 1
        num_jumps: $dataval/general_params/runs_per_number_of_obstacles_per_epoch_model
  
  - name: sweep_obstacles_planes_model
    type: Sweep
    inputs:
      - sweep_seed_planes_model
    parameters:
      sweep_variable_name: obstacle_groups/0/count
      sweep_type: "steps"
      sweep_type_params: 
        start: 25
        stop: 105
        step: $dataval/general_params/plane_sweep_step_size

  - name: input_world_planes_model
    type: ProbabilisticWorld
    inputs:
      - sweep_obstacles_planes_model
    parameters: 
      world_limits: [[-0.2, -0.2, -0.2], [10.2, 10.2, 10.2]]
      voxel_size: $general/voxel_size
      voxel_truncation_distance_vox: $general/truncation_distance_vox
      start_goal_location_type: random_with_mindist
      start_goal_location_type_params: 
        min_dist: 7.0
      start_goal_margin_to_obstacles: 0.5
      seed: 0

      obstacle_groups:
      - name: planes
        group_type: weighted
        count: 100
        obstacles: 
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_thickness
            length_y: $worlds/general_params/plane_world_distribution
            length_z: $worlds/general_params/plane_world_distribution
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_world_distribution
            length_y: $worlds/general_params/plane_thickness
            length_z: $worlds/general_params/plane_world_distribution
          - obstacle_type: Box
            length_x: $worlds/general_params/plane_world_distribution
            length_y: $worlds/general_params/plane_world_distribution
            length_z: $worlds/general_params/plane_thickness

  - name: sampler_planes_model
    type: LearnedRolloutSampler
    inputs: 
      - input_world_planes_model
    parameters:
      terminate_if_stuck: False
      stride: 1

  - name: log_success_rates_planes_model
    type: LogSuccessRatesWandb
    inputs: 
      - sampler_planes_model
    parameters:
      statistic_name: planes_model_validation
  
  - name: every_epoch_planes_model
    type: EveryEpoch
    inputs: 
      - log_success_rates_planes_model
    parameters:
      every_k_epochs: 1
      setup_before_training: False  # We have no model yet before training
      aggregate: True
  
  - name: save_on_disk_planes_model
    type: CacheOnDisk
    inputs: 
      - every_epoch_planes_model
    parameters:
      keep_in_memory: False
      cache_name: planes_model_temp_validation
      store_permanently: False
      chunk_size: 1

